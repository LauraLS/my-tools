---
import Layout from '../layouts/Layout.astro';
import LineDashed from "../components/icon/LineDashed.astro";
---

<Layout title="Monaco Editor">
	<article class="grid h-full">
		<section id="editor-section" class="flex flex-col gap-y-4 p-8 h-screen overflow-hidden">
			<header class="flex flex-row justify-between items-center">
				<h1 class="text-2xl font-bold">Code Editor</h1>
				<div class="flex flex-row gap-2 justify-end flex-wrap">
					<input id="editor-font" type="number" class="bg-primary rounded border border-secondary w-44 p-2 text-sm" placeholder="Size font" value="16" />
					<select class="bg-primary rounded border border-secondary w-44 p-2 text-sm">
						<option>JavaScript</option>
						<option>TypeScript</option>
						<option>JSON</option>
						<option>HTML</option>
						<option>CSS</option>
						<option>Markdown</option>
					</select>
				</div>
			</header>
			<div id="container" class="h-full rounded py-2 overflow-hidden border border-secondary"></div>
		</section>
		<section id="preview-seaction" class="bg-secondary p-8 h-screen overflow-hidden">
			<pre id="response" class="bg-primary h-full rounded p-2 overflow-y-auto">Hello world!</pre>
		</section>
		<div id="split" class="vertical-gutter bg-accent/20 hover:bg-accent/80 transition-colors flex flex-col justify-center items-center cursor-col-resize">
			<LineDashed />
		</div>
	</article>
</Layout>

<style>
	.grid {
		grid-template-columns: 1fr 16px 1fr;
		grid-template-areas: "editor split preview";
	}
	#editor-section {
		grid-area: editor;
	}
	#preview-seaction {
		grid-area: preview;
	}
	#split {
		grid-area: split;
	}
</style>

<script>
	import {execute} from '../services/codeExecutor';
	import * as monaco from 'monaco-editor';
	import TypescriptWorker from 'monaco-editor/esm/vs/language/typescript/ts.worker?worker';
	import Split from 'split-grid'

	const containerElement = document.getElementById('container') as HTMLElement;
	const responseElement = document.getElementById('response') as HTMLElement;
	const editorFontElement = document.getElementById('editor-font') as HTMLInputElement;

	window.MonacoEnvironment = {
		getWorker: () => new TypescriptWorker()
	};

	const editor = monaco.editor.create(containerElement, {
		value: 'console.log("Hello world!");',
		language: 'typescript',
		theme: 'vs-light',
		minimap: {
			enabled: true
		},
		scrollbar: {
			verticalScrollbarSize: 0,
			horizontalScrollbarSize: 0
		},
		automaticLayout: true,
		fontSize: 16,
		lineNumbers: 'on',
		wordWrap: 'on',
		renderLineHighlight: 'none',
		glyphMargin: true,
		folding: true,
		lineDecorationsWidth: 0,
		lineNumbersMinChars: 0,
		overviewRulerBorder: true,
		overviewRulerLanes: 0,
		hideCursorInOverviewRuler: true,
		scrollBeyondLastLine: false,
		fixedOverflowWidgets: true,
	});

	Split({
		columnGutters: [{
			track: 1,
			element: document.querySelector('.vertical-gutter') as HTMLElement,
		}],
	})

	editorFontElement.addEventListener('change', (event) => {
		editor.updateOptions({fontSize: Number((event.target as HTMLInputElement).value)})
	})

	const codeExecutor = debounce(() => {
		execute(editor.getValue()).then(output => responseElement.innerHTML = output)
	}, 2000);

	editor.onDidChangeModelContent(codeExecutor)

	function debounce(func: any, wait: number) {
		let timeout: any;
		return function(...args: any[]) {
			clearTimeout(timeout);
			timeout = setTimeout(() => func(...args), wait);
		};
	}

</script>
